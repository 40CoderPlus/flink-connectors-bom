plugins {
    id 'java'
    id 'idea'
}

repositories {
    mavenLocal()
    maven {
        url "https://repo.huaweicloud.com/repository/maven/"
    }
    mavenCentral()
}

configurations {
    flinkConnector {
        transitive = false
    }
}

apply from: 'bom.gradle'

dependencies {
    flinkDataStreamConnectors.each { entry ->
        flinkConnector "org.apache.flink:$entry.key:$entry.value"
    }

    flinkSqlFormats.each { entry ->
        flinkConnector "org.apache.flink:$entry.key:$entry.value"
    }
    flinkSqlConnectors.each { entry ->
        flinkConnector "org.apache.flink:$entry.key:$entry.value"
    }

    thirdParty.each { entry ->
        flinkConnector "$entry.key:$entry.value"
    }


    if (Boolean.valueOf(includeHadoop)) {
        flinkConnector files("libs/flink-shaded-hadoop-${hadoopMajor}-uber.jar")

        if (hadoopMajor == '3') {
            flinkConnector 'commons-cli:commons-cli:1.5.0'
        }
    }

    if (Boolean.valueOf(includeHive)) {
        flinkConnector "org.apache.flink:${flinkHive[hiveMajor][0]}:${flinkHive[hiveMajor][1]}"
    }

    // Flink CDC
    if (Boolean.valueOf(includeCdc)) {
        flinkCdcSqlConnectors.each { entry ->
            flinkConnector "com.ververica:${entry}:${flinkCdcVersion}"
        }
    }

    // DataLake
    if (Boolean.valueOf(includePaimon)) {
        flinkPaimon.each { entry ->
            flinkConnector "org.apache.paimon:$entry.key:$entry.value"
        }
    }
}

tasks.register('flinkConnector', Copy) {
    copy {
        from configurations.flinkConnector
        into "${buildDir}/connectors"
    }
}

tasks.named('build') {
    finalizedBy('flinkConnector')
}